service: backend-proposal-v2

provider:
  name: aws
  architecture: x86_64
  stage: ${opt:stage, 'dev'}
  region: us-east-1

S3RawProfileDataIA:
  Type: AWS::S3::Bucket
  Properties:
    BucketName: ${self:provider.stage}-raw-profile-data-infrequent-access
    AccessControl: Private
    LifecycleConfiguration:
      Rules:
        - Id: DeleteOldRawProfileData
          Status: Enabled
          ExpirationInDays: 45
          Transitions:
            - StorageClass: STANDARD_IA
              TransitionInDays: 30
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-raw-profile-data-infrequent-access

S3DepuratedProfileDataIA:
  Type: AWS::S3::Bucket
  Properties:
    BucketName: ${self:provider.stage}-depurated-profile-data-infrequent-access
    AccessControl: Private
    LifecycleConfiguration:
      Rules:
        - Id: DeleteOldDepuratedProfileData
          Status: Enabled
          ExpirationInDays: 45
          Transitions:
            - StorageClass: STANDARD_IA
              TransitionInDays: 30
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-depurated-profile-data-infrequent-access

S3RefinedProfileDataIA:
  Type: AWS::S3::Bucket
  Properties:
    BucketName: ${self:provider.stage}-refined-profile-data-infrequent-access
    AccessControl: Private
    LifecycleConfiguration:
      Rules:
        - Id: DeleteOldRefinedProfileData
          Status: Enabled
          ExpirationInDays: 45
          Transitions:
            - StorageClass: STANDARD_IA
              TransitionInDays: 30
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-refined-profile-data-infrequent-access

SQSUserNotificatons:
  Type: AWS::SQS::Queue
  Properties:
    FifoQueue: true
    QueueName: ${self:provider.stage}-user-notifications.fifo
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-user-notifications.fifo

stateMachines:
  profileFilterProcess:
    name: ProfileFilterProcess-${self:provider.stage}
    definition:
      Comment: "A simple AWS Step Functions state machine that filters profiles"
      StartAt: ChooseStartingState
      States:
        ChooseStartingState:
          Type: Choice
          Choices:
            - Variable: "$.type"
              StringEquals: "profiles_search"
              Next: CreatePipeAndConfOpenPosition
            - Variable: "$.type"
              StringEquals: "profiles_url_search"
              Next: FilterProfilesURL
          Default: Fail
        CreatePipeAndConfOpenPosition:
          Type: Task
          Resource:
            Fn::GetAtt:
              - create_and_conf_pipe_open_position
              - Arn
          Next: FilterProfiles
        FilterProfiles:
          Type: Task
          Resource:
            Fn::GetAtt:
              - profile_query_brightdata
              - Arn
          Next: CheckSnapshotStatus
        FilterProfilesURL:
          Type: Task
          Resource:
            Fn::GetAtt:
              - url_profiles_query_brightdata
              - Arn
          Next: CheckSnapshotStatus
        CheckSnapshotStatus:
          Type: Task
          Resource:
            Fn::GetAtt:
              - check_snapshot_status_brightdata
              - Arn
          Retry:
            - ErrorEquals: ["States.ALL"]
              IntervalSeconds: 150
              MaxAttempts: 4
          Catch:
            - ErrorEquals: ["States.ALL"]
              Next: Fail
          Next: WaitBeforeGetData
        WaitBeforeGetData:
          Type: Wait
          Seconds: 600
          Next: GetSnapshotData
        GetSnapshotData:
          Type: Task
          Resource:
            Fn::GetAtt:
              - get_snapshot_data_brightdata
              - Arn
          Next: TransformAndRefine
        TransformAndRefine:
          Type: Task
          Resource:
            Fn::GetAtt:
              - transform_and_refine_brightdata
              - Arn
          Next: QueryAndBuildOpenAIData
        QueryAndBuildOpenAIData:
          Type: Task
          Resource:
            Fn::GetAtt:
              - query_and_build_openai_data
              - Arn
          Catch:
            - ErrorEquals: ["States.ALL"]
              Next: Fail
          Next: AddLinkPostionForm
        AddLinkPostionForm:
          Type: Task
          Resource:
            Fn::GetAtt:
              - add_link_vacancy_form
              - Arn
          Next: ChooseCreationFlow
        ChooseCreationFlow:
          Type: Choice
          Choices:
            - Variable: "$.type"
              StringEquals: "profiles_search"
              Next: CreateCardsForOpenPosition
            - Variable: "$.type"
              StringEquals: "profiles_url_search"
              Next: CreateCards
          Default: Fail
        CreateCardsForOpenPosition:
          Type: Task
          Resource:
            Fn::GetAtt:
              - create_pipe_configuration_open_position
              - Arn
          Next: NotifyCompletion
        CreateCards:
          Type: Task
          Resource:
            Fn::GetAtt:
              - create_cards_for_profiles
              - Arn
          Next: NotifyCompletion
        NotifyCompletion:
          Type: Task
          Resource:
            Fn::GetAtt:
              - notify_complete_profile_filter_process
              - Arn
          End: true
        Fail:
          Type: Choice
          Choices:
            - Variable: "$.Cause"
              StringMatches: "*'type': 'profiles_search'*"
              Next: CreateCardsForOpenPosition
          Default: NotifyFailure
        NotifyFailure:
          Type: Task
          Resource:
            Fn::GetAtt:
              - notify_failure_profile_filter_process
              - Arn
          End: true
