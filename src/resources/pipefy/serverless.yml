service: backend-proposal-v2

provider:
  name: aws
  architecture: x86_64
  stage: ${opt:stage, 'dev'}
  region: us-east-1


PipefyEventBus:
  Type: AWS::Events::EventBus
  Properties:
    Name: ${self:provider.stage}-pipefy-event-bus
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-pipefy-event-bus

PipefyCardMoveRule:
  Type: AWS::Events::Rule
  Properties:
    Name: ${self:provider.stage}-pipefy-card-move-rule
    Description: Rule to trigger the card move event
    EventBusName: !Ref PipefyEventBus
    EventPattern:
      source:
        - pipefy
      detail-type:
        - card.move
    State: ENABLED
    Targets:
      - Id: PipefyCardMoveQueue
        Arn: !GetAtt PipefyCardMoveQueue.Arn
        SqsParameters:
          MessageGroupId: "$.data.card.id"
        InputTransformer:
          InputPathsMap:
            action: "$.data.action"
            from: "$.data.from"
            to: "$.data.to"
            movedBy: "$.data.moved_by"
            cardId: "$.data.card.id"
            pipeId: "$.data.card.pipe_id"
          InputTemplate: |
            {
              "action": <action>,
              "from": <from>,
              "to": <to>,
              "moved_by": <movedBy>,
              "card_id": <cardId>,
              "pipe_id": <pipeId>
            }

PipefyFieldUpdateRule:
  Type: AWS::Events::Rule
  Properties:
    Name: ${self:provider.stage}-pipefy-field-update-rule
    Description: Rule to trigger the field update event
    EventBusName: !Ref PipefyEventBus
    EventPattern:
      source:
        - pipefy
      detail-type:
        - "card.field_update"
    State: ENABLED
    Targets:
      - Id: PipefyFieldUpdateQueue
        Arn: !GetAtt PipefyFieldUpdateQueue.Arn
        SqsParameters:
          MessageGroupId: "$.data.card.id"
        InputTransformer:
          InputPathsMap:
            fieldId: "$.data.field.id"
            cardId: "$.data.card.id"
            pipeId: "$.data.card.pipe_id"
            newValue: "$.data.new_value"
          InputTemplate: |
            {
              "field_id": <fieldId>,
              "card_id": <cardId>,
              "pipe_id": <pipeId>,
              "new_value": <newValue>
            }

PipefyCardMoveQueue:
  Type: AWS::SQS::Queue
  Properties:
    QueueName: ${self:provider.stage}-pipefy-card-move-queue.fifo
    FifoQueue: true
    ContentBasedDeduplication: true
    DeduplicationScope: messageGroup
    VisibilityTimeout: 120
    DelaySeconds: 120
    ReceiveMessageWaitTimeSeconds: 20
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-pipefy-card-move-queue

PipefyFieldUpdateQueue:
  Type: AWS::SQS::Queue
  Properties:
    QueueName: ${self:provider.stage}-pipefy-field-update-queue.fifo
    FifoQueue: true
    ContentBasedDeduplication: true
    DeduplicationScope: messageGroup
    VisibilityTimeout: 120
    DelaySeconds: 0
    ReceiveMessageWaitTimeSeconds: 20
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-pipefy-field-update-queue
