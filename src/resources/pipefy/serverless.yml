service: backend-proposal-v2

provider:
  name: aws
  architecture: x86_64
  stage: ${opt:stage, 'dev'}
  region: us-east-1


PipefyEventBus:
  Type: AWS::Events::EventBus
  Properties:
    Name: ${self:provider.stage}-pipefy-event-bus
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-pipefy-event-bus

PipefyCardMovePipe:
  Type: AWS::Pipes::Pipe
  Properties:
    Name: ${self:provider.stage}-pipefy-card-move-pipe
    Description: Pipe to route Pipefy card move events to SQS
    Source: !GetAtt PipefyEventBus.Arn
    SourceParameters:
      FilterCriteria:
        Filters:
          - Pattern: |
              { "source": ["pipefy"], "detail-type": ["card.move"] }
    Target: !GetAtt PipefyCardMoveQueue.Arn
    TargetParameters:
      SqsQueueParameters:
        MessageGroupId: "$.data.card.id"
      InputTemplate: |
        {
          "MessageBody": {
            "action": <$.data.action>,
            "from": <$.data.from>,
            "to": <$.data.to>,
            "moved_by": <$.data.moved_by>,
            "card_id": <$.data.card.id>,
            "pipe_id": <$.data.card.pipe_id>
          }
        }
    RoleArn: !GetAtt PipefyPipesRole.Arn

PipefyFieldUpdatePipe:
  Type: AWS::Pipes::Pipe
  Properties:
    Name: ${self:provider.stage}-pipefy-field-update-pipe
    Description: Pipe to route Pipefy field update events to SQS
    Source: !GetAtt PipefyEventBus.Arn
    SourceParameters:
      FilterCriteria:
        Filters:
          - Pattern: |
              { "source": ["pipefy"], "detail-type": ["card.field_update"] }
    Target: !GetAtt PipefyFieldUpdateQueue.Arn
    TargetParameters:
      SqsQueueParameters:
        MessageGroupId: "$.data.card.id"
      InputTemplate: |
        {
          "MessageBody": {
            "field_id": <$.data.field.id>,
            "card_id": <$.data.card.id>,
            "pipe_id": <$.data.card.pipe_id>,
            "new_value": <$.data.new_value>
          }
        }
    RoleArn: !GetAtt PipefyPipesRole.Arn

PipefyCardMoveQueue:
  Type: AWS::SQS::Queue
  Properties:
    QueueName: ${self:provider.stage}-pipefy-card-move-queue.fifo
    FifoQueue: true
    ContentBasedDeduplication: true
    DeduplicationScope: messageGroup
    VisibilityTimeout: 60
    DelaySeconds: 20
    ReceiveMessageWaitTimeSeconds: 20
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-pipefy-card-move-queue

PipefyFieldUpdateQueue:
  Type: AWS::SQS::Queue
  Properties:
    QueueName: ${self:provider.stage}-pipefy-field-update-queue.fifo
    FifoQueue: true
    ContentBasedDeduplication: true
    DeduplicationScope: messageGroup
    VisibilityTimeout: 0
    DelaySeconds: 0
    ReceiveMessageWaitTimeSeconds: 20
    Tags:
      - Key: Environment
        Value: ${self:provider.stage}
      - Key: Name
        Value: ${self:provider.stage}-pipefy-field-update-queue

PipefyPipesRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${self:provider.stage}-pipefy-pipes-role
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal:
            Service: pipes.amazonaws.com
          Action: sts:AssumeRole
    Policies:
      - PolicyName: ${self:provider.stage}-pipefy-pipes-policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:GetQueueAttributes
                - sqs:GetQueueUrl
              Resource:
                - !GetAtt PipefyCardMoveQueue.Arn
                - !GetAtt PipefyFieldUpdateQueue.Arn
            - Effect: Allow
              Action:
                - events:PutEvents
              Resource:
                - !GetAtt PipefyEventBus.Arn
