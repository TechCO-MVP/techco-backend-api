openapi: 3.1.0

info:
  title: TechCo Backend API
  description: API documentation for the TechCo backend services.
  version: 1.0.0

servers:
  - url: https://api.techco.com/v1
    description: Production server
  - url: https://staging-api.techco.com/v1
    description: Staging server

resources:

paths:
  /sign_up:
    post:
      summary: Register a new user/company
      description: Register a new user and their company.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/signup:
    post:
      summary: Sign up a new user
      description: Sign up a new user using Cognito.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User signed up
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /business/create:
    post:
      summary: Create a new business
      description: Create a new business entity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Business"
      responses:
        "200":
          description: Business created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  body:
                    $ref: "#/components/schemas/Business"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /business/update/{id}:
    put:
      summary: Update a business
      description: Update an existing business entity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Business"
      responses:
        "200":
          description: Business updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  body:
                    $ref: "#/components/schemas/Business"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/start_auth:
    post:
      summary: Start authentication
      description: Start the authentication process.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthStart"
      responses:
        "200":
          description: Authentication started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthStartResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exception"
  /auth/verify_auth_otp_code:
    post:
      summary: Verify OTP code
      description: Verify the OTP code for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyOTP"
      responses:
        "200":
          description: OTP verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyOTPResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exception"
  /auth/sign_out:
    post:
      summary: Sign out
      description: Sign out the authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignOut"
      responses:
        "200":
          description: User signed out
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignOutResponse"
        "401":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignOutError"
        "500":
          description: Exception response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exception"
  /user/create:
    post:
      summary: Create user
      description: Saves the data of a user in DocumentDB in the user collection, the email is a unique field that should not be repeated for any user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
        "400":
          description: Value error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserValueError"
        "422":
          description: Validation error request data and/or type data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserValidationError"
        "500":
          description: Exception response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exception"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        company:
          type: object
          properties:
            name:
              type: string
            address:
              type: string
    Business:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        country_code:
          type: string
        company_size:
          type: string
        logo:
          type: string
        description:
          type: string
        url:
          type: string
          format: uri
        linkedin_url:
          type: string
          format: uri
        segment:
          type: string
        industry:
          type: string
        parent_business_id:
          type: string
      required:
        - name
        - country_code
        - company_size
    AuthStart:
      type: object
      properties:
        email:
          type: string
          format: email
    AuthStartResponse:
      type: object
      properties:
        message:
          type: string
          example: OTP sent successfully.
        body:
          type: object
          properties:
            session:
              example: example_session_string
    VerifyOTP:
      type: object
      properties:
        email:
          type: string
          example: mail@mail.co.
        session:
          type: string
          example: example_session_string
        otp:
          type: string
          example: 123456
    VerifyOTPResponse:
      type: object
      properties:
        message:
          type: string
          example: Successfully authenticated.
        idToken:
          type: string
          example: fake_id_token.
        accessToken:
          type: string
          example: fake access token.
        refreshToken:
          type: string
          example: fale refresh token.
    SignOut:
      type: object
      properties:
        access_token:
          type: string
          example: fake access token.
    SignOutResponse:
      type: object
      properties:
        message:
          type: string
          example: User successfully signed out.
    SignOutError:
      type: object
      properties:
        message:
          type: string
          example: Unauthorized Invalid or expired token.
    Error:
      type: object
      properties:
        message:
          type: string
    Exception:
      type: object
      properties:
        error:
          type: string
          example: Unexpected error
    CreateUser:
      type: object
      properties:
        business_id:
          type: string
          example: id_123456kjhsad_3124987_sdak
        full_name:
          type: string
          example: name completed user
        email:
          type: string
          example: fake@mail.co
        company_position:
          type: string
          example: auxiliar rrhh
        rol:
          type: string
          example: recruiter
    CreateUserResponse:
      type: object
      properties:
        message:
          type: string
          example: User created successfully.
        body:
          type: object
          properties:
            user:
              type: object
              properties:
                _id:
                  type: string
                  example: id_123456kjhsad_3124987_sdak
    CreateUserValueError:
      type: object
      properties:
        message:
          type: string
          example: Validation error while saving user.
    CreateUserValidationError:
      type: object
      properties:
        message:
          type: string
          example: 1 validation error for UserDTO\nfull_name\n  Field required...
